name: Build
run-name: Build ${{ inputs.binary_name }}/${{ inputs.version }}/${{ inputs.target_triple }}

on:
  workflow_dispatch:
    inputs:
      binary_repo:
        required: true
        type: string
      binary_name:
        required: true
        type: string
      target_triple:
        required: true
        type: string
      target_runner:
        required: true
        type: string
      version:
        required: true
        type: string


jobs:
  build:
    runs-on: ${{ inputs.target_runner }}
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@9db7f66e8e16b5699a514448ce994936c63f0d54 # v1.1.0
        with:
          deno-version: v1.x
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          profile: minimal
          target: ${{ inputs.target_triple }}
      - run: rustup target add wasm32-unknown-unknown
      - name: Setup protoc
        run: |
          PROTOC_BIN=protoc-${PROTOC_VERSION}-${PROTOC_OS}-x86_64.zip
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_BIN}
          unzip ${PROTOC_BIN} -d protoc
          mv protoc/bin/protoc /usr/local/bin/
          which protoc
        env:
          PROTOC_VERSION: '3.15.8'
          PROTOC_OS: ${{ fromJson('{"ubuntu-latest":"linux","macos-latest":"osx"}')[inputs.target_runner] }}
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.binary_repo }}
          ref: ${{ inputs.version }}
          path: repo
      - run: cargo +nightly build --release --bin ${{ inputs.binary_name }} --locked --target ${{ inputs.target_triple }}
        working-directory: ./repo
      - run: >
          deno run -A upload.ts
          ${{ inputs.binary_name }}/${{ inputs.version }}/${{ inputs.target_triple }}
          repo/target/${{ inputs.target_triple }}/release/${{ inputs.binary_name }}
        env:
          S3_ACCESS_KEY: ${{ vars.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
          S3_REGION: ${{ vars.S3_REGION }}
          S3_BUCKET: ${{ vars.S3_BUCKET }}
